*$FROM LibraryEx
*$FROM Lexer
*$FROM Parser/Parser
$EXTERN ArgList, LoadFile, Map, Lexer, Parse;

$ENTRY Go {
    /* пусто */ = <Main <ArgList>>
}

Main {
    (e.ProgName) (e.InputFile)
        , <Lexer <LoadFile e.InputFile>> : e.Tokens
        = <Map Prout e.Tokens>/*
        , <Parse e.Tokens> : t.ParseTree (ERR e.Errors)
        = <Print-ParseTree () t.ParseTree>
          <Prout "\nERRORS:">
          <Map {(e.Err) = <Prout 'Error: ' e.Err>;} e.Errors>;*/
}

Print-ParseTree {
    (e.Indent) () = /* пусто */;
    (e.Indent) (s.Nterm (t.Start t.End))
        = <Prout e.Indent '\'' s.Nterm '\' -> ' t.Start '-' t.End>;
    (e.Indent) (s.Nterm (t.Start t.End) (e.Value))
        = <Prout e.Indent '\'' s.Nterm '\' -> ' t.Start '-' t.End ' "' e.Value '"'>;
    (e.Indent) (s.Nterm ())
        = <Prout e.Indent s.Nterm ' -> ε'>;
    (e.Indent) (s.Nterm (e.Tokens) e.TreeNodes)
        = <Prout e.Indent s.Nterm ' -> ' e.Tokens>
          <Map {
            t.TreeNode = <Print-ParseTree (e.Indent '  ') t.TreeNode>;
          } e.TreeNodes>;
}
