$ENTRY CommonTypeIdentifier {
    /* CommonTypeIdentifier -> KW_INTEGER */
    () (KW_INTEGER e.I) e.Tokens t.Errs
        = <CommonTypeIdentifier ((KW_INTEGER e.I)) e.Tokens t.Errs>;
    
    ((KW_INTEGER e.I)) e.Tokens t.Errs
        = (CommonTypeIdentifier (KW_INTEGER) (KW_INTEGER e.I)) e.Tokens t.Errs;

    /* CommonTypeIdentifier -> KW_BOOLEAN */
    () (KW_BOOLEAN e.B) e.Tokens t.Errs
        = <CommonTypeIdentifier ((KW_BOOLEAN e.B)) e.Tokens t.Errs>;
    
    ((KW_BOOLEAN e.B)) e.Tokens t.Errs
        = (CommonTypeIdentifier (KW_BOOLEAN) (KW_BOOLEAN e.B)) e.Tokens t.Errs;

    /* CommonTypeIdentifier -> KW_REAL */
    () (KW_REAL e.R) e.Tokens t.Errs
        = <CommonTypeIdentifier ((KW_REAL e.R)) e.Tokens t.Errs>;
    
    ((KW_REAL e.R)) e.Tokens t.Errs
        = (CommonTypeIdentifier (KW_REAL) (KW_REAL e.R)) e.Tokens t.Errs;

    /* CommonTypeIdentifier -> KW_CHAR */
    () (KW_CHAR e.C) e.Tokens t.Errs
        = <CommonTypeIdentifier ((KW_CHAR e.C)) e.Tokens t.Errs>;
    
    ((KW_CHAR e.C)) e.Tokens t.Errs
        = (CommonTypeIdentifier (KW_CHAR) (KW_CHAR e.C)) e.Tokens t.Errs;

    /* CommonTypeIdentifier -> KW_TEXT */
    () (KW_TEXT e.T) e.Tokens t.Errs
        = <CommonTypeIdentifier ((KW_TEXT e.T)) e.Tokens t.Errs>;
    
    ((KW_TEXT e.T)) e.Tokens t.Errs
        = (CommonTypeIdentifier (KW_TEXT) (KW_TEXT e.T)) e.Tokens t.Errs;
    
    () (t.Type (t.Start t.End) e.Attrs) e.Tokens (e.Errs)
        = <CommonTypeIdentifier ()
            e.Tokens (e.Errs (t.Start CommonTypeIdentifier '.'
                Unexpected t.Type '.'
                Expected '(' KW_INTEGER or KW_BOOLEAN or KW_REAL or KW_CHAR or KW_TEXT ').'
                Skipped '.'))>;
}
