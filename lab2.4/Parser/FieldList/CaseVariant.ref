*$FROM Parser/FieldList/ConstantList
*$FROM Parser/FieldList/FieldList
$EXTERN ConstantList, FieldList;

$ENTRY CaseVariant {
    /* CaseVariant -> ConstantList ':' '(' FieldList ')' */
    () (ConstantList e.C) e.Tokens t.Errs
        = <CaseVariant ((ConstantList e.C)) e.Tokens t.Errs>;
    () e.Tokens t.Errs
        = <CaseVariant () <ConstantList () e.Tokens t.Errs>>;
    
    (t.C) (':' e.D) e.Tokens t.Errs
        = <CaseVariant (t.C (':' e.D)) e.Tokens t.Errs>;
    (t.C) (t.Type (t.Start t.End) e.Attrs) e.Tokens (e.Errs)
        = <CaseVariant (t.C)
            (':' (t.Start t.Start)) (t.Type (t.Start t.End) e.Attrs) 
            e.Tokens (e.Errs (t.Start CaseVariant '.'
                Unexpected t.Type '.'
                Expected '[' ':' '].'
                Inserted '.'))>;
    (t.C) '$' (e.Errs)
        = <CaseVariant (t.C)
            (':' ((0 0) (0 0))) '$'
            (e.Errs ((EOF) CaseVariant '.'
                Unexpected End Of File '.'
                Expected '[' ':' '].'
                Inserted '.'))>;
    
    (t.C t.D) ('(' e.B) e.Tokens t.Errs
        = <CaseVariant (t.C t.D ('(' e.B)) e.Tokens t.Errs>;
    (t.C t.D) (t.Type (t.Start t.End) e.Attrs) e.Tokens (e.Errs)
        = <CaseVariant (t.C t.D)
            ('(' (t.Start t.Start)) (t.Type (t.Start t.End) e.Attrs) 
            e.Tokens (e.Errs (t.Start CaseVariant '.'
                Unexpected t.Type '.'
                Expected '[' '\(' '].'
                Inserted '.'))>;
    (t.C t.D) '$' (e.Errs)
        = <CaseVariant (t.C t.D)
            ('(' ((0 0) (0 0))) '$'
            (e.Errs ((EOF) CaseVariant '.'
                Unexpected End Of File '.'
                Expected '[' '\(' '].'
                Inserted '.'))>;
    
    (t.C t.D t.B) (FieldList e.F) e.Tokens t.Errs
        = <CaseVariant (t.C t.D t.B (FieldList e.F)) e.Tokens t.Errs>;
    (t.C t.D t.B) e.Tokens t.Errs
        = <CaseVariant (t.C t.D t.B) <FieldList () e.Tokens t.Errs>>;

    (t.C t.D t.B t.F) (')' e.BC) e.Tokens t.Errs
        = <CaseVariant (t.C t.D t.B t.F (')' e.BC)) e.Tokens t.Errs>;
    (t.C t.D t.B t.F) (t.Type (t.Start t.End) e.Attrs) e.Tokens (e.Errs)
        = <CaseVariant (t.C t.D t.B t.F)
            (')' (t.Start t.Start)) (t.Type (t.Start t.End) e.Attrs) 
            e.Tokens (e.Errs (t.Start CaseVariant '.'
                Unexpected t.Type '.'
                Expected '[' '\)' '].'
                Inserted '.'))>;
    (t.C t.D t.B t.F) '$' (e.Errs)
        = <CaseVariant (t.C t.D t.B t.F)
            (')' ((0 0) (0 0))) '$'
            (e.Errs ((EOF) CaseVariant '.'
                Unexpected End Of File '.'
                Expected '[' '\)' '].'
                Inserted '.'))>;
    
    (t.C t.D t.B t.F t.BC) e.Tokens t.Errs
        = (CaseVariant (ConstantList ':' '(' FieldList ')') t.C t.D t.B t.F t.BC) e.Tokens t.Errs;
}
